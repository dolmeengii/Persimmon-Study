import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.StringTokenizer;

public class Main {
	
	static int N , result;
	static ArrayList<Integer>[] list;
	static boolean[] tf;
	public static void main(String[] args) throws IOException {
		
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		
		StringTokenizer st = new StringTokenizer(br.readLine() , " ");
		
		N = Integer.parseInt(st.nextToken());
		int M = Integer.parseInt(st.nextToken());
		
		list = new ArrayList[N];
		tf = new boolean[N];
		
		for(int i = 0; i < N; i++) {
			list[i] = new ArrayList<Integer>();
		}
		
		for(int i = 0; i < M; i++) {
			st = new StringTokenizer(br.readLine() , " ");
			int a = Integer.parseInt(st.nextToken());
			int b = Integer.parseInt(st.nextToken());
			list[a].add(b);
			list[b].add(a);
		}
		
		for(int i = 0; i < N; i++) {
			if(result == 0) {
				tf[i] = true;
				check(i, 1);				
				tf[i] = false;
			}
		}
		System.out.println(result);
			
	}
	
	private static void check(int idx, int cnt) {
		
		if(cnt == 5) {
			result = 1;
			return;
		}
		
		ArrayList<Integer> tem = list[idx];
		
		for(int i = 0; i < tem.size(); i++) {
			int node = tem.get(i);
			if(!tf[node]) {
				tf[node] = true;
				check(node, cnt + 1);
				tf[node] = false;
			}
		}
		
	}


}
