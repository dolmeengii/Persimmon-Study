import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Iterator;
import java.util.StringTokenizer;

public class boj_14500 {
	
	static int[][] map;
	static boolean[][] tfMap;
	static int[] dirR = {0,1,0,-1};
	static int[] dirC = {1,0,-1,0};
	static int r,c,res;
	public static void main(String[] args)throws IOException {
		
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		
		StringTokenizer st = new StringTokenizer(br.readLine(), " ");
		
		r = Integer.parseInt(st.nextToken());
		c = Integer.parseInt(st.nextToken());
		
		map = new int[r][c];
		tfMap = new boolean[r][c];
		
		res = 0;
		for(int i = 0; i < r; i++){
			st = new StringTokenizer(br.readLine(), " ");
			for (int j = 0; j < c ; j++) {
				map[i][j] = Integer.parseInt(st.nextToken());
			}
		}
		
		for (int i = 0; i < r; i++) {
			for (int j = 0; j < c; j++) {
				tfMap[i][j] = true;
				fn(i , j , map[i][j] , 1);
				tfMap[i][j] = false;
			}
		}
		System.out.println(res);
	}
	private static void fn(int row, int col, int sum, int cnt) {
		if(cnt == 4) {
			if(sum > res) {
				res = sum;
			}
			return;
		}
		
		for(int i = 0; i < 4; i++) {
			int nr = row + dirR[i];
			int nc = col + dirC[i];
			if(nr >= 0 && nr < r && nc >= 0 && nc < c && !tfMap[nr][nc]) {
				
				if(cnt == 2) {
					tfMap[nr][nc] = true;
					fn(row , col ,sum + map[nr][nc] , cnt+1);
				}
				
				tfMap[nr][nc] = true;
				fn(nr , nc ,sum + map[nr][nc] , cnt+1);
				tfMap[nr][nc] = false;
				
			}
			
		}
		
		
	}

}
