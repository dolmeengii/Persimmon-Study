import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.PriorityQueue;
import java.util.StringTokenizer;

public class Main {

	public static void main(String[] args)throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine() ," ");
		
		int n = Integer.parseInt(st.nextToken());
		int k = Integer.parseInt(st.nextToken());
		
		int inf = Integer.MAX_VALUE;
		
		int[] coin = new int[n];
		
		int[] dp = new int[k+1];
		Arrays.fill(dp , inf);
		dp[0] = 0;
		
		for (int i = 0; i < n; i++) {
			coin[i] = Integer.parseInt(br.readLine());
		}
		
		for (int i = 0; i < k+1; i++) {
			PriorityQueue<Integer> que = new PriorityQueue<Integer>();
			for (int j = 0; j < n; j++) {
				if (i >= coin[j] && dp[i - coin[j]] != inf) {
					que.add(dp[i - coin[j]] + 1);
				}
			}
			if (!que.isEmpty()) {
				dp[i] = que.poll();
			}
		}
		
		if(dp[k] == inf) dp[k] = -1;
		
		System.out.println(dp[k]);
	}

}
