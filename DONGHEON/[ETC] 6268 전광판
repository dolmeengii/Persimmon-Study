import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.lang.reflect.Array;
import java.nio.Buffer;
import java.util.Arrays;
import java.util.StringTokenizer;

public class softeer_6268 {
	
	static boolean[][] num = {
			{true,true,true,false,true,true,true},
			{false,false,true,false,false,true,false},
			{true,false,true,true,true,false,true},
			{true,false,true,true,false,true,true},
			{false,true,true,true,false,true,false},
			{true,true,false,true,false,true,true},
			{true,true,false,true,true,true,true,},
			{true,true,true,false,false,true,false},
			{true,true,true,true,true,true,true},
			{true,true,true,true,false,true,true},
			{false,false,false,false,false,false,false}
	};
	
	public static void main(String[] args)throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		
		int tc = Integer.parseInt(br.readLine());
		StringBuilder sb = new StringBuilder();
		
		for (int test_case = 0; test_case < tc; test_case++) {
			StringTokenizer st = new StringTokenizer(br.readLine(), " ");
			
			int n1 = Integer.parseInt(st.nextToken());
			int n2 = Integer.parseInt(st.nextToken());
			
			int[] arr1 = new int[5];
			int[] arr2 = new int[5];
			
			int idx1= 0;
			while(n1 > 0) {
				arr1[idx1++] = n1%10;
				n1/=10;
			}
			int idx2 = 0;
			while(n2 > 0) {
				arr2[idx2++] = n2%10;
				n2/=10;
			}
			
			for(int i = idx1; i < 5; i++) {
				arr1[i] = 10;
			}
			
			for(int i = idx2; i < 5; i++) {
				arr2[i] = 10;
			}
			int res = 0;
			for(int i = 0; i < 5; i++) {
				if(arr1[i] != arr2[i]) {
					for(int j = 0; j < 7; j++) {
						if(num[arr1[i]][j] != num[arr2[i]][j]) {
							res++;
						}
					}
				}
			}
//			System.out.println(Arrays.toString(arr1));
//			System.out.println(Arrays.toString(arr2));
			sb.append(res).append("\n");
			
		}
		
		System.out.println(sb);
	}

}
