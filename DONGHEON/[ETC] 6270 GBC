import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.LinkedList;
import java.util.Queue;
import java.util.StringTokenizer;

public class softeer_6270 {
	static class ele{
		int len;
		int speed;
		public ele(int len , int speed) {
			this.len = len;
			this.speed = speed;
		}
	}
	public static void main(String[] args)throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		
		StringTokenizer st = new StringTokenizer(br.readLine(), " ");
		
		int N = Integer.parseInt(st.nextToken());
		int M = Integer.parseInt(st.nextToken());
		
		Queue<ele> que = new LinkedList<ele>();
		for(int i = 0; i < N; i++) {
			st = new StringTokenizer(br.readLine(), " ");
			que.add(new ele(Integer.parseInt(st.nextToken()), Integer.parseInt(st.nextToken())));	
		}
		
		Queue<ele> test = new LinkedList<ele>();
		for(int i = 0; i < M; i++) {
			st = new StringTokenizer(br.readLine(), " ");
			test.add(new ele(Integer.parseInt(st.nextToken()), Integer.parseInt(st.nextToken())));	
		}	
		
		int res = 0;
		int height = 0;
		int spe = 0;
		while(!test.isEmpty()) {
			ele tem = test.poll();
			int len = tem.len;
			
			while(len != 0) {
				if(height == 0) {
					ele ee = que.poll();
					height = ee.len;
					spe = ee.speed;
				}
				
				if(height < len) {
					len -= height;
					height = 0;
					if(res < tem.speed - spe) res = tem.speed - spe;
				}else if(height >= len) {
					height -= len;
					len = 0;
					if(res < tem.speed - spe) res = tem.speed - spe;
				}
				
			}
			
			
		}
		System.out.println(res);
		
	}

}
