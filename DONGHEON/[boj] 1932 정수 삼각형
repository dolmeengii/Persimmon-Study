import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.Collection;
import java.util.StringTokenizer;

public class Main {
	static int[][] dp , mat;
	static int res , N;
	public static void main(String[] args)throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		
		N = Integer.parseInt(br.readLine());
		
		dp = new int[N][N];
		mat = new int[N][N];
		
		for (int i = 0; i < N; i++) {
			StringTokenizer st = new StringTokenizer(br.readLine() , " ");
			for (int j = 0; j <= i; j++) {
				mat[i][j] = Integer.parseInt(st.nextToken());
			}
		}
		if(N == 1) {
			System.out.println(mat[0][0]);
			return;
		}
		dp[0][0] = mat[0][0];
		
		
		for (int i = 0; i < N-1; i++) {
			for (int j = 0; j <= i; j++) {
				fn(i , j);
			}
		}

		System.out.println(res);
	}
	
	private static void fn(int R, int C) {
		if(R != N-2 ) {
			for(int i = 0; i < 2; i++) {
				int a = dp[R][C];
				if( dp[R+1][C+i] < a + mat[R+1][C+i]) {
					dp[R+1][C+i] = a + mat[R+1][C+i];
				}
			}
		}else {
			for(int i = 0; i < 2; i++) {
				int a = dp[R][C];
				if( res < a + mat[R+1][C+i]) {
					res = a + mat[R+1][C+i];
				}
			}
		}

		
	}

}
