import java.util.*;

class Solution {
    public ArrayList<Integer> solution(int[] progresses, int[] speeds) {
        ArrayList<Integer> answer = new ArrayList<>(); // 기능의 개수를 담을 배열리스트
        Queue<Integer> queue = new LinkedList<>(); // 며칠이 걸리는지 담을 큐
        
        period(progresses, speeds, queue);
        
        int front = queue.peek();
        int cnt = 0;
        
        while(true){
            if(queue.isEmpty()) {
                answer.add(cnt);
                break;
            }
            
            int next = queue.poll();
            
            if(front >= next){
                cnt++;
            } else {
                answer.add(cnt);
                cnt = 1;
                front = next;
            }
        }
 
        return answer;
    }
    
    public static void period(int[] progresses, int[] speeds, Queue<Integer> queue){
        for(int i = 0; i < progresses.length; i++){
            int days = (int)Math.ceil((double)(100-progresses[i])/speeds[i]);
            queue.offer(days);
        }
    }
}
